-------------------------------------------------------------------------------
-----------------        INSTALL - Ampache v.3.5         ----------------------
-------------------------------------------------------------------------------

  For the sake of this installation document we will be using Apache and Linux
  however these are by no means requirements. Lighttpd, IIS, whatever could be
  used in Apache's place. 

  I'm assuming that you have Apache, PHP and MySQL running when you
  get to this point.

  Unpack ampache from the tarball and name it ampache.  Please insure that you 
  place ampache in your web path.

  If you are migrating from an older version of Ampache to a newer version of
  Ampache please see the MIGRATION notes.

  If at any time during this install you can't figure out where you have gone
  wrong check out /test.php for help.

  1. Installing Using the Web Interface:

  As of 3.3-Beta3 Ampache includes an web based installation script. In order
  for the script to work correctly you will need a user that has Database 
  create and modify rights for your mysql server. To use this script simply
  visit /install.php. If you get a Access Denied make sure that your /config
  directory does not contain an existing ampache.cfg

  	Web Install: 
		Step 1 - Chosing your Language: 
			Ampache is translated into many different languages you 
			can pick the language that you would like to install Ampache
			in from the drop down provided. 

		Step 2 - Inserting the database:
			This requires you to enter a username/pass for MySQL that 
			is able to create a new database and insert new tables. 
			This should not be the user you actually run ampache as. 
			You can also create MySQL user at this point which will 
			have the correct permissions to the newly created Ampache 
			database.

		Step 3 - Creating the Config file:
			This step asks for a 'user'
			level account for MySQL that has full access over
			the newly created ampache database, this can be the 
			same as the last step, but it is not recommended. 
			Ampache will attempt to write the config file directly
			to the /config directory, if it isn't able to it 
			should prompt you to download the ampache.cfg simply
			put it into /config and then visit the login page. 

		Step 4 - Creating the Initial User Account:
			You will be asked for a username and password for the 
			initial administrator account. If at any time you 
			forget your admin password you can simply turn of 
			authentication by editing your /config/ampache.cfg.php
			and setting use_auth = "false". This will allow you
			to get into your ampache install to reset your admin
			password. 

  Enjoy! If you have any problems with the web installer please report them 
  to vollmer@ampache.org Thanks!
  
    
  2. The Long of Setting Up Ampache

    2.1 Configuring Apache Server
    There are really two choices here.  You can either configure a virtual
    server for the ampache services, or you can just configure a new directory
    directive for ampache.  There are advantages and disadvantages for both.

    If you configure a new virtual server, it has it's own log files which
    could be useful for separating the ampache web traffic from the regular
    web server traffic.

    If you configure a new directory directive for ampache, the ampache
    statistics will be in with all the other web traffic, but it may be a
    little easier (but not by much).

    We've included cronolog lines. These are not required, but for 
    troubleshooting we recommend them. 

    for a separate virtual server httpd.conf reads:

    [snip]

        <VirtualHost 192.168.100.2:80>
           ServerName tunes.ampache.org

           ServerAdmin webmaster@ampache.org
           DocumentRoot /data/www/ampache

           DirectoryIndex index.php

        </VirtualHost>

    [snip]

    Now perform an 'apache restart' and apache should be configured.

    2.2 Configuring Your MySQL Server
    Setup a user and pass for your music db and create the music db.

    Run: 'mysql -u user -p musicdb < sql/ampache.sql'
      to create the music db and tables.

    2.3 Configuring Ampache

      2.3.1 Configuring motd.php

        Copy config/motd.php.dist to config/motd.php

        Edit this file however you like, with either php code or straight html.
        The output will be displayed below the login box on login.php.

      2.3.2 Configuring the Ampache (config.php.inc)
	
	Copy /config/ampache.cfg.php.dist to /config/ampache.cfg.php

	You will need to manually enter the following variables before ampache 
	will work. 

		web_path
		database_hostname
		database_name
		database_username
		database_password

	It is strongly recommended that you read through the entire Ampache config
	file as there are many different options that you may want to change. By 
	defualt Ampache attempts to present you with a secure, yet useable 
	configuration. If you have and recommendations in regards to the defaults
	provided in Ampache.cfg.php.dist please let us know. 

      2.3.3 Creating your First User

	If you don't use the web installer your Ampache installation comes 
	without a default administrator. You will need to edit your 
	/config/ampache.cfg.php and set use_auth = "false" then visit your
	ampache installation, you will not be prompted for a username/password.
	Go to admin --> users and create a Admin level user. Make sure that you
	set use_auth = "true" otherwise your Ampache install will be open to 
	the world. 


  3. Running Ampache For The First Time

	* If you have performed a manual installation you can skip to 3.1,
	setting up the catalog. 

        Point your browser at your new ampache webpage and you should get 
        the installation page. It will run you through inserting your 
	database, creating your config file and setting up your first user

        Grab A Beer....

      3.1  Setting up a catalog
        First, create your local catalogs.  Do this by first clicking
        `Add a catalog', and entering the path for the root of your
        collection of audio files.  There is no need to enter sub directories
	since the update tool will recursively catalog all subdirectories.

        You can enter multiple paths, so this means that you can access
        multiple directories, and hence multiple hard disks.  I solved this
        particular problem by patching the kernel to include logical volume
        management, but that's a completely different story.
	
      3.2  Updating your Catalog
        If everything went correctly, you are now looking at an empty ampache.
        In order to populate the database with all the tag information from
        your MP3 files, you'll need to go to the `Admin' page, and select
        the `Catalog' link.

        Finally, you want to click the `Update All Catalogs' button in the
        middle of the Catalog page and go for coffee (or any other beverages
        you like) as this will take a little bit of time.  The web server
        is now searching for and opening each of the MP3 files in your
        collection, pulling the ID3 tag data out, and using these to populate
        your ampache database.

        Final Note on MP3 Tags:
        Since you the value of ampache is directly related to the data in the
        database, and this data is obtained from the ID3 tags in your MP3 files,
        it really pays to have all your tags populated and in order.

        One of the best tools that I've run across to do this is:
        EasyTAG - Tag editor for MP3 and OGG files
        http://easytag.sourceforge.net

        It runs right on the Linux machine, and is quite a bit faster at updating
        tags than any PC based programs that have to access the MP3 across a
        Samba share point.  But this does not mean that you can't update tags
        this way.  Just that the local Linux program can access the MP3 faster.

        If you insist on using a windows version another good tool can also be 
        found on sourceforge at: http://massid3lib.sourceforge.net/
    
      3.3  Adding Users
	To Add Users simply click admin->users->Add a new user and enter
	the appropriate information


      3.4  Sorting and updating files *EXPERIMENTAL* (Use this at your own risk)
        When updating catalog preferences new fields added in v3.1 include
           ID3 set command
	   Filename pattern
	   Sort Pattern

	When these fields are populated a periodic update may be performed by
	scheduling the fileupdate.pl program to run at timed intervals.  This
	program will query the database and attempt to sort and rename your
	files based on the patterns you have specified and the tag information
	in the database. 

      3.5  Updating Tags from flagged information

	Ampache has a flagging system that allows users and admins to flag songs
	to be re-encoded or modify their meta-data inside the website. Jirwin
	created a command line script called write_tags.php.inc located in /bin
	that will attempt to write out the tags as set, and approved in your
	Ampache database. 

      3.6  Ampache Wiki

	Ampache.org has a wiki set up at http://ampache.org/wiki/ which is
	full of additional information.  Such as specific install instructions
	for different OS's like Debian, Slackware, FreeBSD and Windows.  It
	also explains how to use the additional features and options such as
	downsampling and transcoding, Access Control Lists, Ampache and XML-RPC,
	Ampache + Amarok, Localplay, Democratic Playback and much much more.
	http://ampache.org/wiki/
	
      3.7  Repositories

	Ampache is now available in rpm, ebuild and deb formats, which covers
	most of the major linux distro's so please check your distro's
	repositories to see if Ampache is available.  This will ease the
	installation even more.


